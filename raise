#!/usr/bin/env bash

set -e

_help() {
    echo "Usage: ./raise <options> <command>"
    echo "where options are:"
    echo "    -v | --verbose       Verbose"
    echo "    -y | --yes           Do not ask questions and continue"
    echo "    -n | --no            No to all questions"
    echo "where commands are:"
    echo "    install-builddep     Install build time dependencies (requires sudo)"
    echo "    build                Build the components enabled in config"
    echo "    install              Install binaries under /  (requires sudo)"
    echo "    configure            Configure the system  (requires sudo)"
    echo "    unraise              Uninstall and unconfigure the system  (requires sudo)"
    echo "    test                 Runs tests on the system (requires sudo, Xen must be running)"
}

# Include your defaults
if [[ ! -e "./config" ]]
then
   echo "No config file found, copying default config"
   cp defconfig config
fi
source ./config

# To use this as a library, set RAISIN_PATH appropriately
[[ -z "$RAISIN_PATH" ]] && export RAISIN_PATH="$PWD/lib"

# Then as many as the sub-libraries as you need
source ${RAISIN_PATH}/common-functions.sh
source ${RAISIN_PATH}/common-tests.sh
source ${RAISIN_PATH}/git-checkout.sh
source ${RAISIN_PATH}/commands.sh

# Set up basic functionality
common_init

# parameters check
export VERBOSE=0
export YES=""
while [[ $# -gt 1 ]]
do
  if [[ "$1" = "-v" || "$1" = "--verbose" ]]
  then
    VERBOSE=1
    shift 1
  elif [[ "$1" = "-y" || "$1" = "--yes" ]]
  then
    YES="y"
    shift 1
  elif [[ "$1" = "-n" || "$1" = "--no" ]]
  then
    YES="n"
    shift 1
  else
    _help
    exit 1
  fi
done

case "$1" in
    "install-builddep" | "build" | "install" | "configure" | "unraise" | "test" )
        COMMAND=$1
        ;;
    *)
        _help
        exit 1
        ;;
esac

$COMMAND
