#!/usr/bin/env bash

function xen_check_package() {
    local DEP_Debian_common="build-essential python-dev gettext uuid-dev   \
             libncurses5-dev libyajl-dev libaio-dev pkg-config libglib2.0-dev  \
             libssl-dev libpixman-1-dev bridge-utils wget"
    local DEP_Debian_x86_32="$DEP_Debian_common bcc iasl bin86 texinfo"
    local DEP_Debian_x86_64="$DEP_Debian_x86_32 libc6-dev-i386"
    local DEP_Debian_arm32="$DEP_Debian_common libfdt-dev"
    local DEP_Debian_arm64="$DEP_Debian_arm32"

    local DEP_Fedora_common="make gcc python-devel gettext libuuid-devel   \
             ncurses-devel glib2-devel libaio-devel openssl-devel yajl-devel   \
             patch pixman-devel glibc-devel bridge-utils grub2 wget tar bzip2"
    local DEP_Fedora_x86_32="$DEP_Fedora_common dev86 acpica-tools texinfo"
    local DEP_Fedora_x86_64="$DEP_Fedora_x86_32 glibc-devel.i686"

    local DEP_CentOS_common="$DEP_Fedora_common"
    local DEP_CentOS_x86_32="$DEP_CentOS_common dev86 texinfo iasl"
    local DEP_CentOS_x86_64="$DEP_CentOS_x86_32 glibc-devel.i686"

    verbose_echo Checking Xen dependencies
    eval check-package \$DEP_"$DISTRO"_"$RAISIN_ARCH"
}

function xen_build() {
    local seabios_opt="--disable-seabios"
    local ovmf_opt=""

    cd "$BASEDIR"
    git-checkout $XEN_URL $XEN_REVISION xen-dir
    cd xen-dir
    if [[ -e "$BASEDIR"/seabios-dir/out/bios.bin ]]
    then
        seabios_opt="--with-system-seabios="$BASEDIR"/seabios-dir/out/bios.bin"
    fi
    if [[ -e "$BASEDIR"/ovmf-dir/ovmf.bin ]]
    then
        ovmf_opt="--enable-ovmf --with-system-ovmf="$BASEDIR"/ovmf-dir/ovmf.bin"
    fi
    ./configure --prefix=$PREFIX --with-system-qemu=$PREFIX/lib/xen/bin/qemu-system-i386 \
        --disable-qemu-traditional --enable-rombios $seabios_opt $ovmf_opt
    $RAISIN_MAKE
    $RAISIN_MAKE install DESTDIR="$INST_DIR"
    cd "$BASEDIR"
}

function xen_clean() {
    cd "$BASEDIR"
    if [[ -d xen-dir ]]
    then
        cd xen-dir
        $RAISIN_MAKE distclean
        cd "$BASEDIR"
        rm -rf xen-dir
    fi
}

function _xen_create_bridge_Debian() {
    BRIDGE="xenbr0"
    IFACE=`grep "dhcp" /etc/network/interfaces | head -1 | awk '{print$2}'`

    if [[ -z "$IFACE" ]]
    then
        error_echo "Please refer to the following page to setup networking:"
        error_echo "http://wiki.xenproject.org/wiki/Network_Configuration_Examples_(Xen_4.1%2B)"
        return 1
    fi
    if [[ "`grep $BRIDGE /etc/network/interfaces`" ]]
    then
        verbose_echo "a network bridge seems to be already setup"
        return 0
    fi

    TMPFILE=`mktemp`
    cat /etc/network/interfaces | \
        sed -e "s/iface $IFACE inet dhcp/iface $IFACE inet manual/" \
            -e "/auto/s/\<$IFACE\>/$BRIDGE/g" \
            -e "/allow-hotplug/s/\<$IFACE\>/$BRIDGE/g" > $TMPFILE
    echo "" >> $TMPFILE
    echo "iface $BRIDGE inet dhcp" >> $TMPFILE
    echo "    bridge_ports $IFACE" >> $TMPFILE
    $SUDO mv -f $TMPFILE /etc/network/interfaces
}

function _xen_create_bridge_Fedora() {
    BRIDGE="xenbr0"

    if [[ "`grep $BRIDGE /etc/sysconfig/network-scripts/*`" ]]
    then
        return 0
    fi

    IFACE=`grep 'BOOTPROTO="dhcp"' /etc/sysconfig/network-scripts/* | head -1 | cut -d : -f 1`
    if [[ -z "$IFACE" ]]
    then
        return 1
    fi

    $SUDO chkconfig NetworkManager off
    $SUDO chkconfig network on
    $SUDO service NetworkManager stop

    TMPFILE=`mktemp`
    cat $IFACE | grep -v dhcp | grep -v DHCLIENT > $TMPFILE
    echo "BRIDGE=$BRIDGE" >> $TMPFILE
    $SUDO mv -f $TMPFILE $IFACE

    cat "$BASEDIR"/data/ifcfg-xenbr0 | sed -e "s/@BRIDGE/$BRIDGE/g" > $TMPFILE
    $SUDO mv -f $TMPFILE /etc/sysconfig/network-scripts

    $SUDO iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT
    $SUDO service iptables save
    $SUDO service iptables restart

    $SUDO service network start
}

function _xen_update_bootloader_Debian() {
    $SUDO update-grub
}

function _xen_update_bootloader_Fedora() {
    $SUDO grub2-mkconfig -o /boot/grub2/grub.cfg
}

function xen_configure() {
    _xen_create_bridge_$DISTRO
    start_initscripts xencommons xendomains xen-watchdog
    _xen_update_bootloader_$DISTRO
}

function xen_unconfigure() {
    # leave the bridge in place
    stop_initscripts xencommons xendomains xen-watchdog
    if [[ "`grep -rIi xen /boot/grub* | head -1`" ]]
    then
        xen_update_bootloader_$DISTRO
    fi
}
